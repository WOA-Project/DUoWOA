import{S as Rt,i as St,s as Tt,k as u,q as i,a as _,y as X,l as p,m,r,h as e,c as $,z as Y,n as g,b as c,E as a,A as Z,g as tt,d as et,B as nt,L as Lt,e as st,M as Mt,P as Ot}from"../chunks/index.e54ce4fa.js";import"../chunks/Example.svelte_svelte_type_style_lang.ef5c7854.js";import"../chunks/NavigationView.svelte_svelte_type_style_lang.e567273a.js";import{I as Ft}from"../chunks/IconButton.1d87fe13.js";import"../chunks/APIDocs.svelte_svelte_type_style_lang.921143a3.js";import"../chunks/paths.1672e277.js";import{S as zt,A as Wt}from"../chunks/APIDocs.82e97039.js";import{C as qt}from"../chunks/circle_16_regular.5da77ba6.js";const jt={props:[{name:"href",kind:"let",description:"Sets an href value and converts the button element into an anchor.",type:"string",value:'""',isFunction:!1,isFunctionDeclaration:!1,isRequired:!1,constant:!1,reactive:!1},{name:"disabled",kind:"let",description:"Controls whether the button is intended for user interaction, and styles it accordingly.",type:"boolean",value:"false",isFunction:!1,isFunctionDeclaration:!1,isRequired:!1,constant:!1,reactive:!1},{name:"class",kind:"let",type:"string",value:'""',isFunction:!1,isFunctionDeclaration:!1,isRequired:!1,constant:!1,reactive:!1},{name:"element",kind:"let",description:"Obtains a bound DOM reference to the button or anchor element.",type:"null | HTMLElement",value:"null",isFunction:!1,isFunctionDeclaration:!1,isRequired:!1,constant:!1,reactive:!0}],moduleExports:[],slots:[{name:"__default__",default:!0,slot_props:"{}"}],events:[],typedefs:[],rest_props:{type:"Element",name:"button | a"},componentComment:`
An Icon Button is a clickable control that triggers an immediate action. Unlike the Button control, it serves the purpose of encapsulating an icon glyph as it’s content. [Docs](https://fluent-svelte.vercel.app/docs/components/iconbutton)
- Usage:
    \`\`\`tsx
    <IconButton>
        <svg width="16" height="16" viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg">
            <path d="M8 14A6 6 0 108 2a6 6 0 000 12zm0-1A5 5 0 118 3a5 5 0 010 10z" />
        </svg>
    </IconButton>
    \`\`\``};function Gt(B){let n,f;return{c(){n=new Lt(!1),f=st(),this.h()},l(s){n=Mt(s,!1),f=st(),this.h()},h(){n.a=f},m(s,d){n.m(qt,s,d),c(s,f,d)},p:Ot,d(s){s&&e(f),s&&n.d()}}}function Jt(B){let n,f;return{c(){n=new Lt(!1),f=st(),this.h()},l(s){n=Mt(s,!1),f=st(),this.h()},h(){n.a=f},m(s,d){n.m(qt,s,d),c(s,f,d)},p:Ot,d(s){s&&e(f),s&&n.d()}}}function Kt(B){let n,f,s,d;return n=new Ft({props:{$$slots:{default:[Gt]},$$scope:{ctx:B}}}),s=new Ft({props:{disabled:!0,$$slots:{default:[Jt]},$$scope:{ctx:B}}}),{c(){X(n.$$.fragment),f=_(),X(s.$$.fragment)},l(l){Y(n.$$.fragment,l),f=$(l),Y(s.$$.fragment,l)},m(l,h){Z(n,l,h),c(l,f,h),Z(s,l,h),d=!0},p(l,h){const v={};h&1&&(v.$$scope={dirty:h,ctx:l}),n.$set(v);const R={};h&1&&(R.$$scope={dirty:h,ctx:l}),s.$set(R)},i(l){d||(tt(n.$$.fragment,l),tt(s.$$.fragment,l),d=!0)},o(l){et(n.$$.fragment,l),et(s.$$.fragment,l),d=!1},d(l){nt(n,l),l&&e(f),nt(s,l)}}}function Nt(B){let n,f,s,d,l,h,v,R='<code class="language-ts"><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> IconButton <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">"fluent-svelte"</span><span class="token punctuation">;</span></code>',S,w,T,E,ot,z,y,at,x,lt,it,W,A,rt,j,b,ct,F,ft,ut,L,pt,mt,M,dt,ht,G,D,bt,J,k,_t,O,$t,vt,q,kt,wt,K,C,yt,N,P,Q;return w=new zt({props:{columns:2,repl:"89b152e7c33047768b6c242eb2a6afcb",$$slots:{default:[Kt]},$$scope:{ctx:B}}}),P=new Wt({props:{data:jt}}),{c(){n=u("p"),f=i("An Icon Button is a clickable control that triggers an immediate action. Unlike the "),s=u("a"),d=i("Button"),l=i(" control, it serves the purpose of encapsulating an icon glyph as it’s content."),h=_(),v=u("pre"),S=_(),X(w.$$.fragment),T=_(),E=u("h2"),ot=i("Usage"),z=_(),y=u("p"),at=i("While IconButton is not a direct extension of "),x=u("a"),lt=i("Button"),it=i(", it shares many similarities with it’s API."),W=_(),A=u("h3"),rt=i("Links"),j=_(),b=u("p"),ct=i("An IconButton can either be a clickable action or a link. By default, an IconButton will be rendered as a standard HTML "),F=u("code"),ft=i("<button>"),ut=i(" element. If an "),L=u("code"),pt=i("href"),mt=i(" property is provided, the IconButton will be converted into an "),M=u("code"),dt=i("<a>"),ht=i(" tag."),G=_(),D=u("h3"),bt=i("Disabled Buttons"),J=_(),k=u("p"),_t=i("If the button is not meant to be clicked, you can use the "),O=u("code"),$t=i("disabled"),vt=i(" property to visually indicate this. If a button is disabled, it will be unclickable and the "),q=u("code"),kt=i("href"),wt=i(" property will be ignored."),K=_(),C=u("h2"),yt=i("Component API"),N=_(),X(P.$$.fragment),this.h()},l(t){n=p(t,"P",{});var o=m(n);f=r(o,"An Icon Button is a clickable control that triggers an immediate action. Unlike the "),s=p(o,"A",{href:!0});var U=m(s);d=r(U,"Button"),U.forEach(e),l=r(o," control, it serves the purpose of encapsulating an icon glyph as it’s content."),o.forEach(e),h=$(t),v=p(t,"PRE",{class:!0});var Ut=m(v);Ut.forEach(e),S=$(t),Y(w.$$.fragment,t),T=$(t),E=p(t,"H2",{id:!0});var It=m(E);ot=r(It,"Usage"),It.forEach(e),z=$(t),y=p(t,"P",{});var V=m(y);at=r(V,"While IconButton is not a direct extension of "),x=p(V,"A",{href:!0});var Bt=m(x);lt=r(Bt,"Button"),Bt.forEach(e),it=r(V,", it shares many similarities with it’s API."),V.forEach(e),W=$(t),A=p(t,"H3",{id:!0});var Et=m(A);rt=r(Et,"Links"),Et.forEach(e),j=$(t),b=p(t,"P",{});var I=m(b);ct=r(I,"An IconButton can either be a clickable action or a link. By default, an IconButton will be rendered as a standard HTML "),F=p(I,"CODE",{});var At=m(F);ft=r(At,"<button>"),At.forEach(e),ut=r(I," element. If an "),L=p(I,"CODE",{});var Dt=m(L);pt=r(Dt,"href"),Dt.forEach(e),mt=r(I," property is provided, the IconButton will be converted into an "),M=p(I,"CODE",{});var Ct=m(M);dt=r(Ct,"<a>"),Ct.forEach(e),ht=r(I," tag."),I.forEach(e),G=$(t),D=p(t,"H3",{id:!0});var Pt=m(D);bt=r(Pt,"Disabled Buttons"),Pt.forEach(e),J=$(t),k=p(t,"P",{});var H=m(k);_t=r(H,"If the button is not meant to be clicked, you can use the "),O=p(H,"CODE",{});var gt=m(O);$t=r(gt,"disabled"),gt.forEach(e),vt=r(H," property to visually indicate this. If a button is disabled, it will be unclickable and the "),q=p(H,"CODE",{});var xt=m(q);kt=r(xt,"href"),xt.forEach(e),wt=r(H," property will be ignored."),H.forEach(e),K=$(t),C=p(t,"H2",{id:!0});var Ht=m(C);yt=r(Ht,"Component API"),Ht.forEach(e),N=$(t),Y(P.$$.fragment,t),this.h()},h(){g(s,"href","button"),g(v,"class","language-ts"),g(E,"id","usage"),g(x,"href","button"),g(A,"id","links"),g(D,"id","disabled-buttons"),g(C,"id","component-api")},m(t,o){c(t,n,o),a(n,f),a(n,s),a(s,d),a(n,l),c(t,h,o),c(t,v,o),v.innerHTML=R,c(t,S,o),Z(w,t,o),c(t,T,o),c(t,E,o),a(E,ot),c(t,z,o),c(t,y,o),a(y,at),a(y,x),a(x,lt),a(y,it),c(t,W,o),c(t,A,o),a(A,rt),c(t,j,o),c(t,b,o),a(b,ct),a(b,F),a(F,ft),a(b,ut),a(b,L),a(L,pt),a(b,mt),a(b,M),a(M,dt),a(b,ht),c(t,G,o),c(t,D,o),a(D,bt),c(t,J,o),c(t,k,o),a(k,_t),a(k,O),a(O,$t),a(k,vt),a(k,q),a(q,kt),a(k,wt),c(t,K,o),c(t,C,o),a(C,yt),c(t,N,o),Z(P,t,o),Q=!0},p(t,[o]){const U={};o&1&&(U.$$scope={dirty:o,ctx:t}),w.$set(U)},i(t){Q||(tt(w.$$.fragment,t),tt(P.$$.fragment,t),Q=!0)},o(t){et(w.$$.fragment,t),et(P.$$.fragment,t),Q=!1},d(t){t&&e(n),t&&e(h),t&&e(v),t&&e(S),nt(w,t),t&&e(T),t&&e(E),t&&e(z),t&&e(y),t&&e(W),t&&e(A),t&&e(j),t&&e(b),t&&e(G),t&&e(D),t&&e(J),t&&e(k),t&&e(K),t&&e(C),t&&e(N),nt(P,t)}}}class se extends Rt{constructor(n){super(),St(this,n,null,Nt,Tt,{})}}export{se as component};
