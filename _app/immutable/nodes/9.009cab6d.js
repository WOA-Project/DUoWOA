import{S as Gs,i as $s,s as Cs,k as i,q as n,a as u,y as js,l as s,m as r,r as f,h as o,c as p,z as zs,n as m,b as a,P as t,A as Vs,g as Ys,d as Bs,B as Ks,a4 as qs}from"../chunks/index.34b7596d.js";/* empty css                                                      *//* empty css                                                             */import{I as Js}from"../chunks/InfoBar.82ada07f.js";function Qs(jt){let w,H,g,c,_,T,h,M;return{c(){w=i("li"),H=n("Once you do this, you will need to follow this guide again each time you update Android‚Ñ¢, or your Android‚Ñ¢ installation won't boot anymore."),g=u(),c=i("li"),_=n("Please backup your original boot.img image. You will need to reflash it in order to update successfully within Android‚Ñ¢ going forward. Or you'll have to use an OTA package."),T=u(),h=i("li"),M=n("You cannot relock the bootloader if the boot image was modified using this guide. You will have to restore the original file to do so with instructions mentioned below. The uninstall guide also cannot be followed until you follow the restore part at the bottom of this guide.")},l(d){w=s(d,"LI",{});var b=r(w);H=f(b,"Once you do this, you will need to follow this guide again each time you update Android‚Ñ¢, or your Android‚Ñ¢ installation won't boot anymore."),b.forEach(o),g=p(d),c=s(d,"LI",{});var ve=r(c);_=f(ve,"Please backup your original boot.img image. You will need to reflash it in order to update successfully within Android‚Ñ¢ going forward. Or you'll have to use an OTA package."),ve.forEach(o),T=p(d),h=s(d,"LI",{});var y=r(h);M=f(y,"You cannot relock the bootloader if the boot image was modified using this guide. You will have to restore the original file to do so with instructions mentioned below. The uninstall guide also cannot be followed until you follow the restore part at the bottom of this guide."),y.forEach(o)},m(d,b){a(d,w,b),t(w,H),a(d,g,b),a(d,c,b),t(c,_),a(d,T,b),a(d,h,b),t(h,M)},p:qs,d(d){d&&o(w),d&&o(g),d&&o(c),d&&o(T),d&&o(h)}}}function Xs(jt){let w,H,g,c,_,T,h,M,d,b,ve,y,zt,Vt,we,Yt,x,Bt,Kt,be,qt,W,Jt,Qt,eo,U,Xt,Zt,oo,N,el,ol,to,tl,ll,lo,al,Do,D,Fo,G,il,Ao,$,sl,Oo,he,rl,Ro,ke,nl,Ho,_e,fl,Mo,ye,ul,xo,C,ns='<code class="language-batch"><span class="token command"><span class="token keyword">python3</span> unpack_bootimg.py --boot_img boot.img</span></code>',Wo,Ee,pl,Uo,j,fs=`<code class="language-undefined">boot magic: ANDROID!
kernel_size: 38262800
kernel load address: 0x00008000
ramdisk size: 11828976
ramdisk load address: 0x01000000
second bootloader size: 0
second bootloader load address: 0x00000000
kernel tags load address: 0x00000100
page size: 4096
os version: &lt;os version&gt;
os patch level: &lt;os patch level&gt;
boot image header version: 2
product name:
command line args: &lt;command line&gt;
additional command line args:
recovery dtbo size: 0
recovery dtbo offset: 0x0000000000000000
boot header size: 1660
dtb size: 4229414
dtb address: 0x0000000001f00000</code>`,No,Pe,ml,Go,E,ge,cl,ao,dl,vl,Ie,wl,io,bl,hl,Se,kl,so,_l,$o,k,yl,ro,El,Pl,no,gl,Il,fo,Sl,Ll,uo,Tl,Dl,Co,z,Fl,jo,Le,Al,zo,Te,Ol,Vo,V,us='<code class="language-batch"><span class="token command"><span class="token keyword">SurfaceDuoDualBootKernelImagePatcher</span>.exe .kernel .patchedkernel <span class="token number">0</span></span></code>',Yo,De,Rl,Bo,Y,ps='<code class="language-batch"><span class="token command"><span class="token keyword">SurfaceDuoDualBootKernelImagePatcher</span>.exe .kernel .patchedkernel <span class="token number">1</span></span></code>',Ko,B,Hl,qo,F,Ml,po,xl,Wl,Jo,Fe,Ul,Qo,K,ms='<code class="language-batch"><span class="token command"><span class="token keyword">copy</span> <span class="token parameter attr-name">/b</span> .patchedkernel + .SM8150_EFI.fd .hybridkernel</span></code>',Xo,Ae,Nl,Zo,q,cs='<code class="language-batch"><span class="token command"><span class="token keyword">copy</span> <span class="token parameter attr-name">/b</span> .patchedkernel + .SM8350_EFI.fd .hybridkernel</span></code>',et,J,Gl,ot,Oe,$l,tt,Re,Cl,lt,Q,ds='<code class="language-batch"><span class="token command"><span class="token keyword">python3</span> mkbootimg.py <span class="token parameter attr-name">--kernel</span> hybridkernel <span class="token parameter attr-name">--ramdisk</span> ramdisk <span class="token parameter attr-name">-o</span> dualboot.img <span class="token parameter attr-name">--pagesize</span> <span class="token number">4096</span> --header_version <span class="token number">2</span> <span class="token parameter attr-name">--cmdline</span> <span class="token string">"&lt;command line>"</span> <span class="token parameter attr-name">--dtb</span> dtb <span class="token parameter attr-name">--base</span> 0x0 --os_version &lt;os version> --os_patch_level &lt;os patch level> --second_offset 0xf00000</span></code>',at,He,jl,it,X,vs='<code class="language-batch"><span class="token command"><span class="token keyword">python3</span> mkbootimg.py <span class="token parameter attr-name">--kernel</span> hybridkernel <span class="token parameter attr-name">--ramdisk</span> ramdisk <span class="token parameter attr-name">-o</span> dualboot.img <span class="token parameter attr-name">--pagesize</span> <span class="token number">4096</span> --header_version <span class="token number">3</span> <span class="token parameter attr-name">--cmdline</span> <span class="token string">"&lt;command line>"</span> <span class="token parameter attr-name">--base</span> 0x0 --os_version &lt;os version> --os_patch_level &lt;os patch level></span></code>',st,Z,zl,rt,Me,Vl,nt,ee,Yl,ft,xe,Bl,ut,oe,ws='<code class="language-batch"><span class="token command"><span class="token keyword">adb</span> reboot bootloader</span></code>',pt,We,Kl,mt,te,bs='<code class="language-batch"><span class="token command"><span class="token keyword">fastboot</span> boot dualboot.img</span></code>',ct,Ue,ql,dt,le,Jl,vt,Ne,Ql,wt,Ge,Xl,bt,ae,hs='<code class="language-batch"><span class="token command"><span class="token keyword">adb</span> reboot bootloader</span></code>',ht,$e,Zl,kt,ie,ks='<code class="language-batch"><span class="token command"><span class="token keyword">fastboot</span> boot dualboot.img</span></code>',_t,Ce,ea,yt,je,oa,Et,ze,ta,Pt,se,la,gt,Ve,aa,It,Ye,mo,ia,St,re,_s='<code class="language-batch"><span class="token command"><span class="token keyword">adb</span> reboot recovery</span></code>',Lt,A,ne,co,sa,ra,I,O,na,vo,fa,ua,wo,pa,ma,S,ca,bo,da,va,ho,wa,ko,L,ba,_o,ha,ka,yo,_a,ya,Ea,Eo,Pa,ga,Po,go,Ia,Tt,fe,ys='<code class="language-batch"><span class="token command"><span class="token keyword">fastboot</span> getvar current-slot</span></code>',Dt,Be,Io,Sa,Ft,ue,Es='<code class="language-batch"><span class="token command"><span class="token keyword">fastboot</span> flash boot_&lt;slot> &lt;dualboot.img></span></code>',At,pe,La,Ot,Ke,Ta,Rt,me,Da,Ht,R,So,Fa,Aa,Lo,Oa,Mt,ce,Ra,xt,qe,Ha,Wt,de,Ps=`<code class="language-batch"><span class="token command"><span class="token keyword">fastboot</span> set_active &lt;alternative slot from current></span>
<span class="token command"><span class="token keyword">fastboot</span> set_active &lt;original slot from before></span></code>`,Ut;return D=new Js({props:{title:"Warnings",severity:"caution",closable:"false",$$slots:{default:[Qs]},$$scope:{ctx:jt}}}),{c(){w=i("h3"),H=n("Files/Tools Needed üìÉ"),g=u(),c=i("ul"),_=i("li"),T=n("UEFI Raw FV Image for Surface Duo 1: "),h=i("a"),M=n("SM8150_EFI.fd"),d=u(),b=i("li"),ve=n("UEFI Raw FV Image for Surface Duo 2: "),y=i("a"),zt=n("SM8350_EFI.fd"),Vt=u(),we=i("li"),Yt=n("Stock device boot.img image obtained from an ota package, or from the device itself using "),x=i("a"),Bt=n("this guide"),Kt=u(),be=i("li"),qt=n("Kernel Patching Utility: "),W=i("a"),Jt=n("SurfaceDuoDualBootKernelImagePatcher"),Qt=u(),eo=i("li"),U=i("a"),Xt=n("mkbootimg"),Zt=u(),oo=i("li"),N=i("a"),el=n("unpack_bootimg.py"),ol=u(),to=i("li"),tl=n("Python 3 (the one from the Microsoft Store will do just fine)"),ll=u(),lo=i("li"),al=n("Windows Command Prompt, Linux is not required"),Do=u(),js(D.$$.fragment),Fo=u(),G=i("h3"),il=n("Steps üõ†Ô∏è"),Ao=u(),$=i("h4"),sl=n("Getting original boot image information and files"),Oo=u(),he=i("p"),rl=n("First make sure you‚Äôve downloaded both python and the required py files mentioned above. If you did not, please download them now and come back here afterwards."),Ro=u(),ke=i("p"),nl=n("Once done, open a Command Prompt window on your Windows computer (not PowerShell)."),Ho=u(),_e=i("p"),fl=n("First we need to unpack the stock boot image to gather a few files and information, like so from an OS with python installed:"),Mo=u(),ye=i("p"),ul=n("Assuming you downloaded every file you needed:"),xo=u(),C=i("pre"),Wo=u(),Ee=i("p"),pl=n("This command will extract specific files from the original boot image extracted earlier, but will also print some vital/important information on screen, here‚Äôs an example of such information:"),Uo=u(),j=i("pre"),No=u(),Pe=i("p"),ml=n("To avoid mistakes/reusing values, we‚Äôve replaced them above. You will want to note down safely the values for the following fields, you will need them later:"),Go=u(),E=i("ul"),ge=i("li"),cl=n("os version: "),ao=i("code"),dl=n("<os version>"),vl=u(),Ie=i("li"),wl=n("os patch level: "),io=i("code"),bl=n("<os patch level>"),hl=u(),Se=i("li"),kl=n("command line args: "),so=i("code"),_l=n("<command line>"),$o=u(),k=i("p"),yl=n("later in the guide, you will have to replace every occurence of "),ro=i("code"),El=n("<os version>"),Pl=n(", "),no=i("code"),gl=n("<os patch level>"),Il=n(", "),fo=i("code"),Sl=n("<command line>"),Ll=n(" with the values you collected above, without the "),uo=i("code"),Tl=n("<>"),Dl=n(" of course!"),Co=u(),z=i("h4"),Fl=n("Patching original kernel image header"),jo=u(),Le=i("p"),Al=n("Once done, run the kernel patcher utility as such:"),zo=u(),Te=i("p"),Ol=n("For Surface Duo 1:"),Vo=u(),V=i("pre"),Yo=u(),De=i("p"),Rl=n("For Surface Duo 2:"),Bo=u(),Y=i("pre"),Ko=u(),B=i("h4"),Hl=n("Merging patched kernel image with the UEFI firmware"),qo=u(),F=i("p"),Ml=n("Now we need to combine our new kernel with our UEFI fd image from a Command Prompt (cmd.exe "),po=i("em"),xl=n("not"),Wl=n(" PowerShell):"),Jo=u(),Fe=i("p"),Ul=n("For Surface Duo 1:"),Qo=u(),K=i("pre"),Xo=u(),Ae=i("p"),Nl=n("For Surface Duo 2:"),Zo=u(),q=i("pre"),et=u(),J=i("h4"),Gl=n("Rebuilding a new boot.img file"),ot=u(),Oe=i("p"),$l=n("Now using the files we got earliers as well as the information being output above from unpack_bootimg, we can generate a new dual boot image from an OS with python installed:"),tt=u(),Re=i("p"),Cl=n("For Surface Duo 1:"),lt=u(),Q=i("pre"),at=u(),He=i("p"),jl=n("For Surface Duo 2:"),it=u(),X=i("pre"),st=u(),Z=i("h4"),zl=n("Testing the newly made image"),rt=u(),Me=i("p"),Vl=n("Before risking to brick your device, it is good practice to test your image to make sure it fully works to avoid further issues."),nt=u(),ee=i("h5"),Yl=n("Testing Android‚Ñ¢ works"),ft=u(),xe=i("p"),Bl=n("First go to the bootloader menu with:"),ut=u(),oe=i("pre"),pt=u(),We=i("p"),Kl=n("Now, boot your newly image like so, with the device folded flat/open:"),mt=u(),te=i("pre"),ct=u(),Ue=i("p"),ql=n("If your device boots into Android‚Ñ¢ just fine, like before, you did well! your image is fully working for Android‚Ñ¢ use. Make sure you can unlock the device fine and use it as normal before proceeding further."),dt=u(),le=i("h5"),Jl=n("Testing Windows works"),vt=u(),Ne=i("p"),Ql=n("Now we‚Äôll test the ability to boot into Windows in roughly the same way."),wt=u(),Ge=i("p"),Xl=n("Go to the bootloader menu once more with:"),bt=u(),ae=i("pre"),ht=u(),$e=i("p"),Zl=n("Now, boot your newly image like so, this time with the device closed, not opened:"),kt=u(),ie=i("pre"),_t=u(),Ce=i("p"),ea=n("If your device boots into Windows just fine, like before, you did well! your image is fully working for Windows use. Make sure you can unlock the device fine and use it as normal before proceeding further."),yt=u(),je=i("p"),oa=n("We have now certified our image works. In case it does not, please make sure you used a matching boot.img file to generate your file, and correctly used the information provided at the beginning of the guide in commands."),Et=u(),ze=i("p"),ta=n("Reboot the device back to Android‚Ñ¢ from the start menu, power, reboot."),Pt=u(),se=i("h4"),la=n("Flashing newly made image"),gt=u(),Ve=i("p"),aa=n("Now that our image is confirmed working:"),It=u(),Ye=i("ul"),mo=i("li"),ia=n("Go to stock recovery"),St=u(),re=i("pre"),Lt=u(),A=i("ul"),ne=i("li"),co=i("p"),sa=n("Go to fastbootd. To do that, on recovery:"),ra=u(),I=i("ol"),O=i("li"),na=n("Press and hold "),vo=i("strong"),fa=n("Power"),ua=n(" then press "),wo=i("strong"),pa=n("Volume Up"),ma=u(),S=i("li"),ca=n("Release "),bo=i("strong"),da=n("Volume Up"),va=n(", release "),ho=i("strong"),wa=n("Power"),ko=i("ul"),L=i("li"),ba=n("Do not release the "),_o=i("strong"),ha=n("Power"),ka=n(" button before pressing the "),yo=i("strong"),_a=n("Volume Up"),ya=n(" button."),Ea=u(),Eo=i("li"),Pa=n("Go to ‚Äúfastboot‚Äù in the menu"),ga=u(),Po=i("li"),go=i("p"),Ia=n("Get the current slot"),Tt=u(),fe=i("pre"),Dt=u(),Be=i("ul"),Io=i("li"),Sa=n("Flash the boot img to that slot"),Ft=u(),ue=i("pre"),At=u(),pe=i("h3"),La=n("Reverting changes for Android‚Ñ¢ Updates or uninstallation"),Ot=u(),Ke=i("p"),Ta=n("To revert the changes and go back to a clean state, simply flash the original boot.img file again from the recovery menu. In case you are unable to go to the recovery menu, it is possible your device has a completely broken boot partition. You will need to reflash the file from twrp or an alternative bootable linux method, which is not detailed yet in this guide."),Rt=u(),me=i("h3"),Da=n("How it Works"),Ht=u(),R=i("ul"),So=i("li"),Fa=n("To boot Android‚Ñ¢, leave Surface Duo open while turning it on"),Aa=u(),Lo=i("li"),Oa=n("To boot Windows, close Surface Duo as soon as you turn it on and wait a while to open it again"),Mt=u(),ce=i("h3"),Ra=n("Troubleshooting"),xt=u(),qe=i("p"),Ha=n("If the device keeps going back to the bootloader menu"),Wt=u(),de=i("pre"),this.h()},l(e){w=s(e,"H3",{id:!0});var l=r(w);H=f(l,"Files/Tools Needed üìÉ"),l.forEach(o),g=p(e),c=s(e,"UL",{});var v=r(c);_=s(v,"LI",{});var Ma=r(_);T=f(Ma,"UEFI Raw FV Image for Surface Duo 1: "),h=s(Ma,"A",{href:!0,rel:!0});var Ca=r(h);M=f(Ca,"SM8150_EFI.fd"),Ca.forEach(o),Ma.forEach(o),d=p(v),b=s(v,"LI",{});var xa=r(b);ve=f(xa,"UEFI Raw FV Image for Surface Duo 2: "),y=s(xa,"A",{href:!0,rel:!0});var ja=r(y);zt=f(ja,"SM8350_EFI.fd"),ja.forEach(o),xa.forEach(o),Vt=p(v),we=s(v,"LI",{});var Wa=r(we);Yt=f(Wa,"Stock device boot.img image obtained from an ota package, or from the device itself using "),x=s(Wa,"A",{href:!0,rel:!0});var za=r(x);Bt=f(za,"this guide"),za.forEach(o),Wa.forEach(o),Kt=p(v),be=s(v,"LI",{});var Ua=r(be);qt=f(Ua,"Kernel Patching Utility: "),W=s(Ua,"A",{href:!0,rel:!0});var Va=r(W);Jt=f(Va,"SurfaceDuoDualBootKernelImagePatcher"),Va.forEach(o),Ua.forEach(o),Qt=p(v),eo=s(v,"LI",{});var Ya=r(eo);U=s(Ya,"A",{href:!0,rel:!0});var Ba=r(U);Xt=f(Ba,"mkbootimg"),Ba.forEach(o),Ya.forEach(o),Zt=p(v),oo=s(v,"LI",{});var Ka=r(oo);N=s(Ka,"A",{href:!0,rel:!0});var qa=r(N);el=f(qa,"unpack_bootimg.py"),qa.forEach(o),Ka.forEach(o),ol=p(v),to=s(v,"LI",{});var Ja=r(to);tl=f(Ja,"Python 3 (the one from the Microsoft Store will do just fine)"),Ja.forEach(o),ll=p(v),lo=s(v,"LI",{});var Qa=r(lo);al=f(Qa,"Windows Command Prompt, Linux is not required"),Qa.forEach(o),v.forEach(o),Do=p(e),zs(D.$$.fragment,e),Fo=p(e),G=s(e,"H3",{id:!0});var Xa=r(G);il=f(Xa,"Steps üõ†Ô∏è"),Xa.forEach(o),Ao=p(e),$=s(e,"H4",{id:!0});var Za=r($);sl=f(Za,"Getting original boot image information and files"),Za.forEach(o),Oo=p(e),he=s(e,"P",{});var ei=r(he);rl=f(ei,"First make sure you‚Äôve downloaded both python and the required py files mentioned above. If you did not, please download them now and come back here afterwards."),ei.forEach(o),Ro=p(e),ke=s(e,"P",{});var oi=r(ke);nl=f(oi,"Once done, open a Command Prompt window on your Windows computer (not PowerShell)."),oi.forEach(o),Ho=p(e),_e=s(e,"P",{});var ti=r(_e);fl=f(ti,"First we need to unpack the stock boot image to gather a few files and information, like so from an OS with python installed:"),ti.forEach(o),Mo=p(e),ye=s(e,"P",{});var li=r(ye);ul=f(li,"Assuming you downloaded every file you needed:"),li.forEach(o),xo=p(e),C=s(e,"PRE",{class:!0});var gs=r(C);gs.forEach(o),Wo=p(e),Ee=s(e,"P",{});var ai=r(Ee);pl=f(ai,"This command will extract specific files from the original boot image extracted earlier, but will also print some vital/important information on screen, here‚Äôs an example of such information:"),ai.forEach(o),Uo=p(e),j=s(e,"PRE",{class:!0});var Is=r(j);Is.forEach(o),No=p(e),Pe=s(e,"P",{});var ii=r(Pe);ml=f(ii,"To avoid mistakes/reusing values, we‚Äôve replaced them above. You will want to note down safely the values for the following fields, you will need them later:"),ii.forEach(o),Go=p(e),E=s(e,"UL",{});var Je=r(E);ge=s(Je,"LI",{});var Na=r(ge);cl=f(Na,"os version: "),ao=s(Na,"CODE",{});var si=r(ao);dl=f(si,"<os version>"),si.forEach(o),Na.forEach(o),vl=p(Je),Ie=s(Je,"LI",{});var Ga=r(Ie);wl=f(Ga,"os patch level: "),io=s(Ga,"CODE",{});var ri=r(io);bl=f(ri,"<os patch level>"),ri.forEach(o),Ga.forEach(o),hl=p(Je),Se=s(Je,"LI",{});var $a=r(Se);kl=f($a,"command line args: "),so=s($a,"CODE",{});var ni=r(so);_l=f(ni,"<command line>"),ni.forEach(o),$a.forEach(o),Je.forEach(o),$o=p(e),k=s(e,"P",{});var P=r(k);yl=f(P,"later in the guide, you will have to replace every occurence of "),ro=s(P,"CODE",{});var fi=r(ro);El=f(fi,"<os version>"),fi.forEach(o),Pl=f(P,", "),no=s(P,"CODE",{});var ui=r(no);gl=f(ui,"<os patch level>"),ui.forEach(o),Il=f(P,", "),fo=s(P,"CODE",{});var pi=r(fo);Sl=f(pi,"<command line>"),pi.forEach(o),Ll=f(P," with the values you collected above, without the "),uo=s(P,"CODE",{});var mi=r(uo);Tl=f(mi,"<>"),mi.forEach(o),Dl=f(P," of course!"),P.forEach(o),Co=p(e),z=s(e,"H4",{id:!0});var ci=r(z);Fl=f(ci,"Patching original kernel image header"),ci.forEach(o),jo=p(e),Le=s(e,"P",{});var di=r(Le);Al=f(di,"Once done, run the kernel patcher utility as such:"),di.forEach(o),zo=p(e),Te=s(e,"P",{});var vi=r(Te);Ol=f(vi,"For Surface Duo 1:"),vi.forEach(o),Vo=p(e),V=s(e,"PRE",{class:!0});var Ss=r(V);Ss.forEach(o),Yo=p(e),De=s(e,"P",{});var wi=r(De);Rl=f(wi,"For Surface Duo 2:"),wi.forEach(o),Bo=p(e),Y=s(e,"PRE",{class:!0});var Ls=r(Y);Ls.forEach(o),Ko=p(e),B=s(e,"H4",{id:!0});var bi=r(B);Hl=f(bi,"Merging patched kernel image with the UEFI firmware"),bi.forEach(o),qo=p(e),F=s(e,"P",{});var Nt=r(F);Ml=f(Nt,"Now we need to combine our new kernel with our UEFI fd image from a Command Prompt (cmd.exe "),po=s(Nt,"EM",{});var hi=r(po);xl=f(hi,"not"),hi.forEach(o),Wl=f(Nt," PowerShell):"),Nt.forEach(o),Jo=p(e),Fe=s(e,"P",{});var ki=r(Fe);Ul=f(ki,"For Surface Duo 1:"),ki.forEach(o),Qo=p(e),K=s(e,"PRE",{class:!0});var Ts=r(K);Ts.forEach(o),Xo=p(e),Ae=s(e,"P",{});var _i=r(Ae);Nl=f(_i,"For Surface Duo 2:"),_i.forEach(o),Zo=p(e),q=s(e,"PRE",{class:!0});var Ds=r(q);Ds.forEach(o),et=p(e),J=s(e,"H4",{id:!0});var yi=r(J);Gl=f(yi,"Rebuilding a new boot.img file"),yi.forEach(o),ot=p(e),Oe=s(e,"P",{});var Ei=r(Oe);$l=f(Ei,"Now using the files we got earliers as well as the information being output above from unpack_bootimg, we can generate a new dual boot image from an OS with python installed:"),Ei.forEach(o),tt=p(e),Re=s(e,"P",{});var Pi=r(Re);Cl=f(Pi,"For Surface Duo 1:"),Pi.forEach(o),lt=p(e),Q=s(e,"PRE",{class:!0});var Fs=r(Q);Fs.forEach(o),at=p(e),He=s(e,"P",{});var gi=r(He);jl=f(gi,"For Surface Duo 2:"),gi.forEach(o),it=p(e),X=s(e,"PRE",{class:!0});var As=r(X);As.forEach(o),st=p(e),Z=s(e,"H4",{id:!0});var Ii=r(Z);zl=f(Ii,"Testing the newly made image"),Ii.forEach(o),rt=p(e),Me=s(e,"P",{});var Si=r(Me);Vl=f(Si,"Before risking to brick your device, it is good practice to test your image to make sure it fully works to avoid further issues."),Si.forEach(o),nt=p(e),ee=s(e,"H5",{id:!0});var Li=r(ee);Yl=f(Li,"Testing Android‚Ñ¢ works"),Li.forEach(o),ft=p(e),xe=s(e,"P",{});var Ti=r(xe);Bl=f(Ti,"First go to the bootloader menu with:"),Ti.forEach(o),ut=p(e),oe=s(e,"PRE",{class:!0});var Os=r(oe);Os.forEach(o),pt=p(e),We=s(e,"P",{});var Di=r(We);Kl=f(Di,"Now, boot your newly image like so, with the device folded flat/open:"),Di.forEach(o),mt=p(e),te=s(e,"PRE",{class:!0});var Rs=r(te);Rs.forEach(o),ct=p(e),Ue=s(e,"P",{});var Fi=r(Ue);ql=f(Fi,"If your device boots into Android‚Ñ¢ just fine, like before, you did well! your image is fully working for Android‚Ñ¢ use. Make sure you can unlock the device fine and use it as normal before proceeding further."),Fi.forEach(o),dt=p(e),le=s(e,"H5",{id:!0});var Ai=r(le);Jl=f(Ai,"Testing Windows works"),Ai.forEach(o),vt=p(e),Ne=s(e,"P",{});var Oi=r(Ne);Ql=f(Oi,"Now we‚Äôll test the ability to boot into Windows in roughly the same way."),Oi.forEach(o),wt=p(e),Ge=s(e,"P",{});var Ri=r(Ge);Xl=f(Ri,"Go to the bootloader menu once more with:"),Ri.forEach(o),bt=p(e),ae=s(e,"PRE",{class:!0});var Hs=r(ae);Hs.forEach(o),ht=p(e),$e=s(e,"P",{});var Hi=r($e);Zl=f(Hi,"Now, boot your newly image like so, this time with the device closed, not opened:"),Hi.forEach(o),kt=p(e),ie=s(e,"PRE",{class:!0});var Ms=r(ie);Ms.forEach(o),_t=p(e),Ce=s(e,"P",{});var Mi=r(Ce);ea=f(Mi,"If your device boots into Windows just fine, like before, you did well! your image is fully working for Windows use. Make sure you can unlock the device fine and use it as normal before proceeding further."),Mi.forEach(o),yt=p(e),je=s(e,"P",{});var xi=r(je);oa=f(xi,"We have now certified our image works. In case it does not, please make sure you used a matching boot.img file to generate your file, and correctly used the information provided at the beginning of the guide in commands."),xi.forEach(o),Et=p(e),ze=s(e,"P",{});var Wi=r(ze);ta=f(Wi,"Reboot the device back to Android‚Ñ¢ from the start menu, power, reboot."),Wi.forEach(o),Pt=p(e),se=s(e,"H4",{id:!0});var Ui=r(se);la=f(Ui,"Flashing newly made image"),Ui.forEach(o),gt=p(e),Ve=s(e,"P",{});var Ni=r(Ve);aa=f(Ni,"Now that our image is confirmed working:"),Ni.forEach(o),It=p(e),Ye=s(e,"UL",{});var Gi=r(Ye);mo=s(Gi,"LI",{});var $i=r(mo);ia=f($i,"Go to stock recovery"),$i.forEach(o),Gi.forEach(o),St=p(e),re=s(e,"PRE",{class:!0});var xs=r(re);xs.forEach(o),Lt=p(e),A=s(e,"UL",{});var Gt=r(A);ne=s(Gt,"LI",{});var $t=r(ne);co=s($t,"P",{});var Ci=r(co);sa=f(Ci,"Go to fastbootd. To do that, on recovery:"),Ci.forEach(o),ra=p($t),I=s($t,"OL",{});var Qe=r(I);O=s(Qe,"LI",{});var To=r(O);na=f(To,"Press and hold "),vo=s(To,"STRONG",{});var ji=r(vo);fa=f(ji,"Power"),ji.forEach(o),ua=f(To," then press "),wo=s(To,"STRONG",{});var zi=r(wo);pa=f(zi,"Volume Up"),zi.forEach(o),To.forEach(o),ma=p(Qe),S=s(Qe,"LI",{});var Xe=r(S);ca=f(Xe,"Release "),bo=s(Xe,"STRONG",{});var Vi=r(bo);da=f(Vi,"Volume Up"),Vi.forEach(o),va=f(Xe,", release "),ho=s(Xe,"STRONG",{});var Yi=r(ho);wa=f(Yi,"Power"),Yi.forEach(o),ko=s(Xe,"UL",{});var Bi=r(ko);L=s(Bi,"LI",{});var Ze=r(L);ba=f(Ze,"Do not release the "),_o=s(Ze,"STRONG",{});var Ki=r(_o);ha=f(Ki,"Power"),Ki.forEach(o),ka=f(Ze," button before pressing the "),yo=s(Ze,"STRONG",{});var qi=r(yo);_a=f(qi,"Volume Up"),qi.forEach(o),ya=f(Ze," button."),Ze.forEach(o),Bi.forEach(o),Xe.forEach(o),Ea=p(Qe),Eo=s(Qe,"LI",{});var Ji=r(Eo);Pa=f(Ji,"Go to ‚Äúfastboot‚Äù in the menu"),Ji.forEach(o),Qe.forEach(o),$t.forEach(o),ga=p(Gt),Po=s(Gt,"LI",{});var Qi=r(Po);go=s(Qi,"P",{});var Xi=r(go);Ia=f(Xi,"Get the current slot"),Xi.forEach(o),Qi.forEach(o),Gt.forEach(o),Tt=p(e),fe=s(e,"PRE",{class:!0});var Ws=r(fe);Ws.forEach(o),Dt=p(e),Be=s(e,"UL",{});var Zi=r(Be);Io=s(Zi,"LI",{});var es=r(Io);Sa=f(es,"Flash the boot img to that slot"),es.forEach(o),Zi.forEach(o),Ft=p(e),ue=s(e,"PRE",{class:!0});var Us=r(ue);Us.forEach(o),At=p(e),pe=s(e,"H3",{id:!0});var os=r(pe);La=f(os,"Reverting changes for Android‚Ñ¢ Updates or uninstallation"),os.forEach(o),Ot=p(e),Ke=s(e,"P",{});var ts=r(Ke);Ta=f(ts,"To revert the changes and go back to a clean state, simply flash the original boot.img file again from the recovery menu. In case you are unable to go to the recovery menu, it is possible your device has a completely broken boot partition. You will need to reflash the file from twrp or an alternative bootable linux method, which is not detailed yet in this guide."),ts.forEach(o),Rt=p(e),me=s(e,"H3",{id:!0});var ls=r(me);Da=f(ls,"How it Works"),ls.forEach(o),Ht=p(e),R=s(e,"UL",{});var Ct=r(R);So=s(Ct,"LI",{});var as=r(So);Fa=f(as,"To boot Android‚Ñ¢, leave Surface Duo open while turning it on"),as.forEach(o),Aa=p(Ct),Lo=s(Ct,"LI",{});var is=r(Lo);Oa=f(is,"To boot Windows, close Surface Duo as soon as you turn it on and wait a while to open it again"),is.forEach(o),Ct.forEach(o),Mt=p(e),ce=s(e,"H3",{id:!0});var ss=r(ce);Ra=f(ss,"Troubleshooting"),ss.forEach(o),xt=p(e),qe=s(e,"P",{});var rs=r(qe);Ha=f(rs,"If the device keeps going back to the bootloader menu"),rs.forEach(o),Wt=p(e),de=s(e,"PRE",{class:!0});var Ns=r(de);Ns.forEach(o),this.h()},h(){m(w,"id","filestools-needed-"),m(h,"href","https://github.com/WOA-Project/SurfaceDuoPkg/releases"),m(h,"rel","nofollow"),m(y,"href","https://github.com/WOA-Project/SurfaceDuoPkg/releases"),m(y,"rel","nofollow"),m(x,"href","https://github.com/WOA-Project/SurfaceDuo-Guides/blob/main/Other/ExtractingPartitions.md"),m(x,"rel","nofollow"),m(W,"href","https://github.com/WOA-Project/SurfaceDuoDualBootKernelImagePatcher/releases"),m(W,"rel","nofollow"),m(U,"href","https://github.com/WOA-Project/SurfaceDuoPkg/blob/main/ImageResources/mkbootimg.py"),m(U,"rel","nofollow"),m(N,"href","https://github.com/WOA-Project/SurfaceDuo-Guides/raw/main/InstallWindows/Files/unpack_bootimg.py"),m(N,"rel","nofollow"),m(G,"id","steps-Ô∏è"),m($,"id","getting-original-boot-image-information-and-files"),m(C,"class","language-batch"),m(j,"class","language-undefined"),m(z,"id","patching-original-kernel-image-header"),m(V,"class","language-batch"),m(Y,"class","language-batch"),m(B,"id","merging-patched-kernel-image-with-the-uefi-firmware"),m(K,"class","language-batch"),m(q,"class","language-batch"),m(J,"id","rebuilding-a-new-bootimg-file"),m(Q,"class","language-batch"),m(X,"class","language-batch"),m(Z,"id","testing-the-newly-made-image"),m(ee,"id","testing-android-works"),m(oe,"class","language-batch"),m(te,"class","language-batch"),m(le,"id","testing-windows-works"),m(ae,"class","language-batch"),m(ie,"class","language-batch"),m(se,"id","flashing-newly-made-image"),m(re,"class","language-batch"),m(fe,"class","language-batch"),m(ue,"class","language-batch"),m(pe,"id","reverting-changes-for-android-updates-or-uninstallation"),m(me,"id","how-it-works"),m(ce,"id","troubleshooting"),m(de,"class","language-batch")},m(e,l){a(e,w,l),t(w,H),a(e,g,l),a(e,c,l),t(c,_),t(_,T),t(_,h),t(h,M),t(c,d),t(c,b),t(b,ve),t(b,y),t(y,zt),t(c,Vt),t(c,we),t(we,Yt),t(we,x),t(x,Bt),t(c,Kt),t(c,be),t(be,qt),t(be,W),t(W,Jt),t(c,Qt),t(c,eo),t(eo,U),t(U,Xt),t(c,Zt),t(c,oo),t(oo,N),t(N,el),t(c,ol),t(c,to),t(to,tl),t(c,ll),t(c,lo),t(lo,al),a(e,Do,l),Vs(D,e,l),a(e,Fo,l),a(e,G,l),t(G,il),a(e,Ao,l),a(e,$,l),t($,sl),a(e,Oo,l),a(e,he,l),t(he,rl),a(e,Ro,l),a(e,ke,l),t(ke,nl),a(e,Ho,l),a(e,_e,l),t(_e,fl),a(e,Mo,l),a(e,ye,l),t(ye,ul),a(e,xo,l),a(e,C,l),C.innerHTML=ns,a(e,Wo,l),a(e,Ee,l),t(Ee,pl),a(e,Uo,l),a(e,j,l),j.innerHTML=fs,a(e,No,l),a(e,Pe,l),t(Pe,ml),a(e,Go,l),a(e,E,l),t(E,ge),t(ge,cl),t(ge,ao),t(ao,dl),t(E,vl),t(E,Ie),t(Ie,wl),t(Ie,io),t(io,bl),t(E,hl),t(E,Se),t(Se,kl),t(Se,so),t(so,_l),a(e,$o,l),a(e,k,l),t(k,yl),t(k,ro),t(ro,El),t(k,Pl),t(k,no),t(no,gl),t(k,Il),t(k,fo),t(fo,Sl),t(k,Ll),t(k,uo),t(uo,Tl),t(k,Dl),a(e,Co,l),a(e,z,l),t(z,Fl),a(e,jo,l),a(e,Le,l),t(Le,Al),a(e,zo,l),a(e,Te,l),t(Te,Ol),a(e,Vo,l),a(e,V,l),V.innerHTML=us,a(e,Yo,l),a(e,De,l),t(De,Rl),a(e,Bo,l),a(e,Y,l),Y.innerHTML=ps,a(e,Ko,l),a(e,B,l),t(B,Hl),a(e,qo,l),a(e,F,l),t(F,Ml),t(F,po),t(po,xl),t(F,Wl),a(e,Jo,l),a(e,Fe,l),t(Fe,Ul),a(e,Qo,l),a(e,K,l),K.innerHTML=ms,a(e,Xo,l),a(e,Ae,l),t(Ae,Nl),a(e,Zo,l),a(e,q,l),q.innerHTML=cs,a(e,et,l),a(e,J,l),t(J,Gl),a(e,ot,l),a(e,Oe,l),t(Oe,$l),a(e,tt,l),a(e,Re,l),t(Re,Cl),a(e,lt,l),a(e,Q,l),Q.innerHTML=ds,a(e,at,l),a(e,He,l),t(He,jl),a(e,it,l),a(e,X,l),X.innerHTML=vs,a(e,st,l),a(e,Z,l),t(Z,zl),a(e,rt,l),a(e,Me,l),t(Me,Vl),a(e,nt,l),a(e,ee,l),t(ee,Yl),a(e,ft,l),a(e,xe,l),t(xe,Bl),a(e,ut,l),a(e,oe,l),oe.innerHTML=ws,a(e,pt,l),a(e,We,l),t(We,Kl),a(e,mt,l),a(e,te,l),te.innerHTML=bs,a(e,ct,l),a(e,Ue,l),t(Ue,ql),a(e,dt,l),a(e,le,l),t(le,Jl),a(e,vt,l),a(e,Ne,l),t(Ne,Ql),a(e,wt,l),a(e,Ge,l),t(Ge,Xl),a(e,bt,l),a(e,ae,l),ae.innerHTML=hs,a(e,ht,l),a(e,$e,l),t($e,Zl),a(e,kt,l),a(e,ie,l),ie.innerHTML=ks,a(e,_t,l),a(e,Ce,l),t(Ce,ea),a(e,yt,l),a(e,je,l),t(je,oa),a(e,Et,l),a(e,ze,l),t(ze,ta),a(e,Pt,l),a(e,se,l),t(se,la),a(e,gt,l),a(e,Ve,l),t(Ve,aa),a(e,It,l),a(e,Ye,l),t(Ye,mo),t(mo,ia),a(e,St,l),a(e,re,l),re.innerHTML=_s,a(e,Lt,l),a(e,A,l),t(A,ne),t(ne,co),t(co,sa),t(ne,ra),t(ne,I),t(I,O),t(O,na),t(O,vo),t(vo,fa),t(O,ua),t(O,wo),t(wo,pa),t(I,ma),t(I,S),t(S,ca),t(S,bo),t(bo,da),t(S,va),t(S,ho),t(ho,wa),t(S,ko),t(ko,L),t(L,ba),t(L,_o),t(_o,ha),t(L,ka),t(L,yo),t(yo,_a),t(L,ya),t(I,Ea),t(I,Eo),t(Eo,Pa),t(A,ga),t(A,Po),t(Po,go),t(go,Ia),a(e,Tt,l),a(e,fe,l),fe.innerHTML=ys,a(e,Dt,l),a(e,Be,l),t(Be,Io),t(Io,Sa),a(e,Ft,l),a(e,ue,l),ue.innerHTML=Es,a(e,At,l),a(e,pe,l),t(pe,La),a(e,Ot,l),a(e,Ke,l),t(Ke,Ta),a(e,Rt,l),a(e,me,l),t(me,Da),a(e,Ht,l),a(e,R,l),t(R,So),t(So,Fa),t(R,Aa),t(R,Lo),t(Lo,Oa),a(e,Mt,l),a(e,ce,l),t(ce,Ra),a(e,xt,l),a(e,qe,l),t(qe,Ha),a(e,Wt,l),a(e,de,l),de.innerHTML=Ps,Ut=!0},p(e,[l]){const v={};l&1&&(v.$$scope={dirty:l,ctx:e}),D.$set(v)},i(e){Ut||(Ys(D.$$.fragment,e),Ut=!0)},o(e){Bs(D.$$.fragment,e),Ut=!1},d(e){e&&o(w),e&&o(g),e&&o(c),e&&o(Do),Ks(D,e),e&&o(Fo),e&&o(G),e&&o(Ao),e&&o($),e&&o(Oo),e&&o(he),e&&o(Ro),e&&o(ke),e&&o(Ho),e&&o(_e),e&&o(Mo),e&&o(ye),e&&o(xo),e&&o(C),e&&o(Wo),e&&o(Ee),e&&o(Uo),e&&o(j),e&&o(No),e&&o(Pe),e&&o(Go),e&&o(E),e&&o($o),e&&o(k),e&&o(Co),e&&o(z),e&&o(jo),e&&o(Le),e&&o(zo),e&&o(Te),e&&o(Vo),e&&o(V),e&&o(Yo),e&&o(De),e&&o(Bo),e&&o(Y),e&&o(Ko),e&&o(B),e&&o(qo),e&&o(F),e&&o(Jo),e&&o(Fe),e&&o(Qo),e&&o(K),e&&o(Xo),e&&o(Ae),e&&o(Zo),e&&o(q),e&&o(et),e&&o(J),e&&o(ot),e&&o(Oe),e&&o(tt),e&&o(Re),e&&o(lt),e&&o(Q),e&&o(at),e&&o(He),e&&o(it),e&&o(X),e&&o(st),e&&o(Z),e&&o(rt),e&&o(Me),e&&o(nt),e&&o(ee),e&&o(ft),e&&o(xe),e&&o(ut),e&&o(oe),e&&o(pt),e&&o(We),e&&o(mt),e&&o(te),e&&o(ct),e&&o(Ue),e&&o(dt),e&&o(le),e&&o(vt),e&&o(Ne),e&&o(wt),e&&o(Ge),e&&o(bt),e&&o(ae),e&&o(ht),e&&o($e),e&&o(kt),e&&o(ie),e&&o(_t),e&&o(Ce),e&&o(yt),e&&o(je),e&&o(Et),e&&o(ze),e&&o(Pt),e&&o(se),e&&o(gt),e&&o(Ve),e&&o(It),e&&o(Ye),e&&o(St),e&&o(re),e&&o(Lt),e&&o(A),e&&o(Tt),e&&o(fe),e&&o(Dt),e&&o(Be),e&&o(Ft),e&&o(ue),e&&o(At),e&&o(pe),e&&o(Ot),e&&o(Ke),e&&o(Rt),e&&o(me),e&&o(Ht),e&&o(R),e&&o(Mt),e&&o(ce),e&&o(xt),e&&o(qe),e&&o(Wt),e&&o(de)}}}class lr extends Gs{constructor(w){super(),$s(this,w,null,Xs,Cs,{})}}export{lr as component};
